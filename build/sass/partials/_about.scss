.pat-about {
    
    position: relative;

    @include create-gradient( 'horizontal', #C9580B, $primary-color );
    @include light-or-dark-text( $primary-color );

    // Base Padding on Column Gutters for a consistent feel
    $small-padding: map-get( $grid-column-gutter, 'small' );
    $medium-padding: map-get( $grid-column-gutter, 'medium' );

    @media #{$medium-up} {
        padding: $medium-padding;   
    }

    h1, h2, h3, h4, h5, h6 {
        @include light-or-dark-text( $primary-color );
    }

    .columns {

        @if lightness( $primary-color ) < 50% {
            & > p {
                // Sometimes "Bold" is too "Bold"
                @include text-stroke( $light-color );
            }
        }

    }

    blockquote {

        border: none;
        font-size: rem-calc( map-get-deep( $header-sizes, 'small', 'h5' ) );
        
        @media #{$medium-up} {
            font-size: rem-calc( map-get-deep( $header-sizes, 'medium', 'h5' ) );
        }

        &, p {
            color: $secondary-color;
            font-weight: bold;
        }

    }

    .image-container {

        img {
            position: absolute;
            top: -5.15em;
            left: 0;
            width: 115%;
            max-width: none;
        }

    }

    @media #{$small-only} {

        // Reset tons of values

        background: transparent;
        color: inherit;

        h1, h2, h3, h4, h5, h6 {
            color: $header-color;
        }

        .columns {

            @if lightness( $primary-color ) < 50% {

                & > p {
                    text-shadow: none;   
                }

            }

        }

        // Actual changes for Mobile

        .text-container {
            
            padding: 0;
            
            & > * {
                padding: 0 $small-padding 0 $small-padding;
            }
            
            & > *:first-child {
                padding-top: $small-padding;
            }
            
            & > *:last-child {
                padding-bottom: $small-padding;
            }
            
        }

        blockquote {

            padding: 0;
            margin-bottom: 0;
            
            @if lightness( $primary-color ) < 50% {

                p {

                    @include text-stroke( #fff );

                }

                &, p {
                    color: #fff;
                }

            }
            @else {

                &, p {
                    color: inherit;
                }

            }
            
            &, p {
                
                font-weight: normal;
                
            }
            
            @include create-gradient( 'horizontal', #C9580B, $primary-color );

        }

        .image-container {
            
            @include create-gradient( 'horizontal', #C9580B, $primary-color );

            img {
                position: relative;
                top: 0;
                left: 0;
                right: 0;
            }

        }

    }

}